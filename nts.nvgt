#include"includes/includes.nvgt"
int echomode=1;
string dlgtype="dialog";
string keyboardtheme="keyboard";
string filename;
string filetext;
string version;
file dockfile, dockver;
instance appstence("nt");
audio_form form;
sound_pool p, spool, temp;
savedata st("data/preffs/options.dat","F3Jua5qKnJADtZH94CKSUxVr7kAl3BCW6D4MlajEwWb3JUVDXq7HYT79zD18XMco8f1VDE6SNnjB3ApdUIb4mDd5DSxYAw8KiI9tZAEURDwExxEUZnTIRdHs2kBCujq6CM0Zt9awIZO08HSiGMpvKv78MYR4oeb4N8pzLE7nltqeobTsFCdtgFC9TPXOyGX82SmyxlTuPzJYeZSmCVI2VsLsq0YRZXjBGXnWyTRIobbc7v0oSUPCB6EjK3V1B6B6RNA2rhreNZB2K5RHSMfU1m0IjLu5CNppbKNQaxzfnRWcOVtQFdlOCIqEhUSi4jraN1C11zMSp8bD4ciOe2uOgq72s1jfzWxzDEHSzGjz2TvS");
virtual_dialogs vd;
void readpreffs()
{
st.load();
if(st.d.exists("dlgtype"))
{
dlgtype=st.read_string("dlgtype");
}
if(st.d.exists("keyboardtheme"))
{
keyboardtheme=st.read_string("keyboardtheme");
}
}
void writepreffs()
{
st.add("dlgtype",dlgtype);
st.add("keyboardtheme",keyboardtheme);
st.save();
}
void main()
{
getver();
show_window("NeuroNest, version "+version);
if(appstence.is_already_running)
{
alert("error", "You can only have one instence of this app running!");
exit();
}
else
{
    notewriter();
}
}
void notewriter()
{
form.reset();
form.create_window("NeuroNest", false);
int newdock=form.create_button("Create file");
int opdock=form.create_button("Load file");
int preffs=form.create_button("&preferences");
int quit=form.create_button("Quit app");
form.focus(newdock);
while(true)
{
wait(5);
form.monitor();
if(key_pressed(KEY_ESCAPE) || form.is_pressed(quit))
{
exit();
}
if(form.is_pressed(preffs))
{
preffsmenu();
}
if(form.is_pressed(newdock))
{
vd.set_disallowed_chars("!@#$%^&*()[]{};:'\"\\|,.<>?/+=`~", false, "This character is not allowed.");
string fn=vd.input_box("","Enter the name of this file.");
if (!fn.empty())
{
string fullpath = "data/notes/" + fn + ".txt";
file f;
if (f.open(fullpath, "wb"))
{
f.write("");
f.close();
filename = fullpath;
filetext = "";
alert("Note created", "Empty note created at: " + filename);
wait(500);
note_editor();
}
else
{
alert("Error", "Could not create the file: " + fullpath);
wait(500);
notewriter();
}
}
}
if(form.is_pressed(opdock))
{
string path = open_file_dialog("Text Files:txt", "data/notes/");
if (!path.empty())
{
file f;
if (f.open(path, "rb"))
{
filetext = f.read();
f.close();
filename = path;
alert("Note loaded", "Opened: " + filename);
wait(500);
note_editor();
}
else
{
alert("Error", "Failed to read the file.");
wait(500);
notewriter();
}
}
}
}
}
void note_editor()
{
form.reset();
form.create_window("note editor", false);
int dockbox = form.create_input_box("Text area", filetext, read_only:false, multiline:true, multiline_enter:true);
int opdock=form.create_button("Load file");
int savdock=form.create_button("Save file");
int savdock2=form.create_button("Save file as");
int quit=form.create_button("Close file");
form.focus(dockbox);
while(true)
{
wait(5);
key_echocheck(form);
form.monitor();
filetext=form.get_text(dockbox);
if(key_pressed(KEY_ESCAPE) || form.is_pressed(quit))
{
notewriter();
}
if(form.is_pressed(savdock))
{
file f;
if (f.open(filename, "wb"))
{
f.write(filetext);
f.close();
alert("Saved", "File saved: " + filename);
}
else
{
alert("Error", "Could not save the file.");
}
}
if (form.is_pressed(savdock2))
{
string newpath = save_file_dialog("Text Files:txt", "data/notes/");
if (!newpath.empty())
{
if (!newpath.lower().ends_with(".txt"))
newpath += ".txt";
file f;
if (f.open(newpath, "wb"))
{
f.write(filetext);
f.close();
filename = newpath;
alert("Saved", "File saved as: " + filename);
}
else
{
alert("Error", "Could not save the file.");
}
}
}
if(form.is_pressed(opdock))
{
string path = open_file_dialog("Text Files:txt", "data/notes/");
if (!path.empty())
{
file f;
if (f.open(path, "rb"))
{
filetext = f.read();
f.close();
filename = path;
alert("Note loaded", "Opened: " + filename);
wait(500);
note_editor();
}
else
{
alert("Error", "Failed to read the file.");
wait(500);
note_editor();
}
}
}
}
}
